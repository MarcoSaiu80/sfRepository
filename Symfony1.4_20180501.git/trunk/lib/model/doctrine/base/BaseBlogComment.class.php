<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BlogComment', 'doctrine');

/**
 * BaseBlogComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $article_id
 * @property string $author
 * @property string $content
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property BlogArticle $BlogArticle
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getArticleId()   Returns the current record's "article_id" value
 * @method string      getAuthor()      Returns the current record's "author" value
 * @method string      getContent()     Returns the current record's "content" value
 * @method timestamp   getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()   Returns the current record's "updated_at" value
 * @method BlogArticle getBlogArticle() Returns the current record's "BlogArticle" value
 * @method BlogComment setId()          Sets the current record's "id" value
 * @method BlogComment setArticleId()   Sets the current record's "article_id" value
 * @method BlogComment setAuthor()      Sets the current record's "author" value
 * @method BlogComment setContent()     Sets the current record's "content" value
 * @method BlogComment setCreatedAt()   Sets the current record's "created_at" value
 * @method BlogComment setUpdatedAt()   Sets the current record's "updated_at" value
 * @method BlogComment setBlogArticle() Sets the current record's "BlogArticle" value
 * 
 * @package    sf2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBlogComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('blog_comment');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('article_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BlogArticle', array(
             'local' => 'article_id',
             'foreign' => 'id'));
    }
}